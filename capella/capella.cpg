%token Identifier<Identifier> BulkText<BulkText>
       BaseDef AtomDef TypeDef ClassHeaderDef ClassFooterDef ModuleHeaderDef ModuleFooterDef NamespaceDef
       List Optional LParen RParen LChevron RChevron Pipe Equal Comma Semicolon Colon;
%namespace capella;
%dont_use_stl;
%allow_ebnf;

Module<Module>
        : [MakeModule] Declaration*(0)
        ;
        
Declaration<Declaration>
        : [MakeBaseDef] BaseDef Equal Identifier(0) Semicolon
        | [MakeAtomDef] AtomDef Equal Atom/Comma(0) Semicolon
        | [MakeTypeDef] TypeDef Identifier(0) Equal TypeDefRight(1) Semicolon
        | [MakeClassHeaderDef] ClassHeaderDef Equal BulkText(0)
        | [MakeClassFooterDef] ClassFooterDef Equal BulkText(0)
        | [MakeModuleHeaderDef] ModuleHeaderDef Equal BulkText(0)
        | [MakeModuleFooterDef] ModuleFooterDef Equal BulkText(0)
        | [MakeNamespaceDef] NamespaceDef Equal Identifier(0) Semicolon
        ;

Atom<Atom>
        : [MakeAtom0] Identifier(0)
        | [MakeAtom1] Identifier(0) LChevron Identifier(1) RChevron
        ;

TypeDefRight<TypeDefRight>
        : [MakeScalor] Identifier(0) LParen Identifier(1) RParen
        | [MakeList] Identifier(0) List LParen Identifier(1) RParen
        | [MakeVariant] Variant(0)
        | [MakeTuple] Tuple(0)
        ;

Variant<Variant>
        : [MakeVariant0] Identifier(0)
        | [MakeVariant1] Variant(0) Pipe Identifier(1)
        ;

Tuple<Tuple>
        : [MakeTuple0] TupleItem(0) Comma TupleItem(1)
        | [MakeTuple1] Tuple(0) Comma TupleItem(1)
        ;

TupleItem<TupleItem>
        : [MakeTupleItem0] Identifier(0) LParen Identifier(1) RParen
        | [MakeTupleItem1] Identifier(0) List LParen Identifier(1) RParen
        ;
